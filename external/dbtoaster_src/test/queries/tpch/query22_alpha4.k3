fiel--------------------- SCHEMA ----------------------
CREATE STREAM CUSTOMER(custkey int, name string, address string, nationkey int, phone string, acctbal float, mktsegment string, comment string)
  FROM FILE '../../experiments/data/tpch/big/customer.csv' LINE DELIMITED
  CSV(delimiter := '|');

CREATE STREAM ORDERS(orderkey int, custkey int, orderstatus string, totalprice float, orderdate date, orderpriority string, clerk string, shippriority int, comment string)
  FROM FILE '../../experiments/data/tpch/big/orders.csv' LINE DELIMITED
  CSV(delimiter := '|');
--------------------- MAPS ----------------------
QUERY_1_1(float)[][C1_NATIONKEY : int];

CUSTOMER(float)[][NATION : int,CKEY : int,ACCTBAL : float];

BALANCE(float)[][];

ORDERS_BY_CUSTOMER(int)[][CKEY : int];

-------------------- QUERIES --------------------
QUERY QUERY22 := $QUERY_1_1;

-------------------- PATTERNS --------------------
/*
QUERY_1_1: out{};
*/
--------------------- TRIGGERS ----------------------
ON + CUSTOMER(CKEY:int, name:string, address:string, NATION:int, phone:string, ACCTBAL:float, mktsegment:string, comment:string)
{
   if( Member($CUSTOMER,[NATION:int;CKEY:int;ACCTBAL:float]) )
     PCValueUpdate($CUSTOMER,[],[NATION:int;CKEY:int;ACCTBAL:float],
       ((Lookup($CUSTOMER,[NATION:int;CKEY:int;ACCTBAL:float])) + 
         ACCTBAL:float))
   else
     PCValueUpdate($CUSTOMER,[],[NATION:int;CKEY:int;ACCTBAL:float],
       ACCTBAL:float);
   PCValueUpdate($BALANCE,[],[],($BALANCE + ACCTBAL:float));
   Apply(
     Lambda(__cse1:Collection(<int; float>)) {
       Iterate(
         Lambda(<QNATION:int; updated_v:float>) {
           PCValueUpdate($QUERY_1_1,[],[QNATION:int],updated_v:float)},
         __cse1:Collection(<int; float>))},
     GroupByAggregate(
       Lambda(<QNATION:int; QCKEY:int; QACCTBAL:float; v1:float>,accv_4:float) 
         {
         if( Member($ORDERS_BY_CUSTOMER,[QCKEY:int]) )
           ((if0( (((QACCTBAL:float < $BALANCE)) * 
                    ((0 == (Lookup($ORDERS_BY_CUSTOMER,[QCKEY:int]))))) )
               v1:float) + accv_4:float)
         else
           {
              PCValueUpdate($ORDERS_BY_CUSTOMER,[],[QCKEY:int],0);
              ((if0( (((QACCTBAL:float < $BALANCE)) * ((0. == 0.))) )
                  v1:float) + accv_4:float);
           }},0.,
       Lambda(<QNATION:int; QCKEY:int; QACCTBAL:float; v1:float>) {
         <QNATION:int>},Slice($CUSTOMER,[])));
}


ON - CUSTOMER(CKEY:int, name:string, address:string, NATION:int, phone:string, ACCTBAL:float, mktsegment:string, comment:string)
{
}

ON + ORDERS(orderkey:int, CKEY:int, orderstatus:string, totalprice:float, orderdate:date, orderpriority:string, clerk:string, shippriority:int, comment:string)
{
   if( Member($ORDERS_BY_CUSTOMER,[CKEY:int]) )
     Iterate(
       Lambda(<QNATION:int; dv:float>) {
         if( Member($QUERY_1_1,[QNATION:int]) )
           PCValueUpdate($QUERY_1_1,[],[QNATION:int],
             ((Lookup($QUERY_1_1,[QNATION:int])) + dv:float))
         else
           PCValueUpdate($QUERY_1_1,[],[QNATION:int],dv:float)},
       GroupByAggregate(
         Lambda(<QNATION:int; __t1:float; QACCTBAL:float; v1:float>,
           accv_12:float) {
           ((if0( (((QACCTBAL:float < $BALANCE)) * 
                    ((0 == (Lookup($ORDERS_BY_CUSTOMER,[CKEY:int]))))) )
               (-1. * v1:float)) + accv_12:float)},0.,
         Lambda(<QNATION:int; __t1:float; QACCTBAL:float; v1:float>) {
           <QNATION:int>},Slice($CUSTOMER,[CKEY => (CKEY:int);])))
   else
     Iterate(
       Lambda(<QNATION:int; dv:float>) {
         if( Member($QUERY_1_1,[QNATION:int]) )
           PCValueUpdate($QUERY_1_1,[],[QNATION:int],
             ((Lookup($QUERY_1_1,[QNATION:int])) + dv:float))
         else
           PCValueUpdate($QUERY_1_1,[],[QNATION:int],dv:float)},
       {
          PCValueUpdate($ORDERS_BY_CUSTOMER,[],[CKEY:int],0);
          Apply(
            Lambda(__cse1:Collection(<int; float>)) {
              __cse1:Collection(<int; float>)},
            GroupByAggregate(
              Lambda(<QNATION:int; __t1:float; QACCTBAL:float; v1:float>,
                accv_12:float) {
                ((if0( (((QACCTBAL:float < $BALANCE)) * ((0. == 0.))) )
                    (-1. * v1:float)) + accv_12:float)},0.,
              Lambda(<QNATION:int; __t1:float; QACCTBAL:float; v1:float>) {
                <QNATION:int>},Slice($CUSTOMER,[CKEY => (CKEY:int);])));
       });
   if( Member($ORDERS_BY_CUSTOMER,[CKEY:int]) )
     Iterate(
       Lambda(<QNATION:int; dv:float>) {
         if( Member($QUERY_1_1,[QNATION:int]) )
           PCValueUpdate($QUERY_1_1,[],[QNATION:int],
             ((Lookup($QUERY_1_1,[QNATION:int])) + dv:float))
         else
           PCValueUpdate($QUERY_1_1,[],[QNATION:int],dv:float)},
       GroupByAggregate(
         Lambda(<QNATION:int; __t5:float; QACCTBAL:float; v1:float>,
           accv_16:float) {
           ((if0( (((QACCTBAL:float < $BALANCE)) * 
                    ((0 == (((Lookup($ORDERS_BY_CUSTOMER,[CKEY:int])) + 1))))) )
               v1:float) + accv_16:float)},0.,
         Lambda(<QNATION:int; __t5:float; QACCTBAL:float; v1:float>) {
           <QNATION:int>},Slice($CUSTOMER,[CKEY => (CKEY:int);])))
   else
     Iterate(
       Lambda(<QNATION:int; dv:float>) {
         if( Member($QUERY_1_1,[QNATION:int]) )
           PCValueUpdate($QUERY_1_1,[],[QNATION:int],
             ((Lookup($QUERY_1_1,[QNATION:int])) + dv:float))
         else
           PCValueUpdate($QUERY_1_1,[],[QNATION:int],dv:float)},
       {
          PCValueUpdate($ORDERS_BY_CUSTOMER,[],[CKEY:int],0);
          Apply(
            Lambda(__cse1:Collection(<int; float>)) {
              __cse1:Collection(<int; float>)},
            GroupByAggregate(
              Lambda(<QNATION:int; __t5:float; QACCTBAL:float; v1:float>,
                accv_16:float) {
                ((if0( (((QACCTBAL:float < $BALANCE)) * ((0. == 1.))) )
                    v1:float) + accv_16:float)},0.,
              Lambda(<QNATION:int; __t5:float; QACCTBAL:float; v1:float>) {
                <QNATION:int>},Slice($CUSTOMER,[CKEY => (CKEY:int);])));
       });
   if( Member($ORDERS_BY_CUSTOMER,[CKEY:int]) )
     PCValueUpdate($ORDERS_BY_CUSTOMER,[],[CKEY:int],
       ((Lookup($ORDERS_BY_CUSTOMER,[CKEY:int])) + 1))
   else
     PCValueUpdate($ORDERS_BY_CUSTOMER,[],[CKEY:int],1);
}

ON - ORDERS(orderkey:int, CKEY:int, orderstatus:string, totalprice:float, orderdate:date, orderpriority:string, clerk:string, shippriority:int, comment:string)
{
}

ON SYSTEM READY
{
}


